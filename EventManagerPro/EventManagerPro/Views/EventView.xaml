<Page
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:metro="http://schemas.codeplex.com/elysium/theme"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:col="clr-namespace:System.Collections;assembly=mscorlib"
	xmlns:converters="clr-namespace:EventManagerPro.Converters" mc:Ignorable="d"
	x:Class="EventManagerPro.Views.EventView"
	x:Name="Page"
	Width="1024" Height="768" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
    <Page.CommandBindings>
        <CommandBinding Command="Save" CanExecute="CanSave" Executed="ExecuteSave" />
    </Page.CommandBindings>
    <Page.Resources>
        <converters:ProgressPercentageConverter x:Key="progressPercentageConverter" />
        <Storyboard x:Key="StatusMessageFadeIn">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="statusMessage">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="StatusMessageWarningStyle" TargetType="Label">
            <Setter Property="Background" Value="#FFFEEFB3" />
            <Setter Property="BorderBrush" Value="#FF9F6000" />
            <Setter Property="Foreground" Value="#FF9F6000" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <!-- #Start SubEvents Cell Templates -->
        <DataTemplate x:Key="SubEventNameCellTemplate">
            <TextBox Width="Auto" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" FontSize="13" Padding="3" />
        </DataTemplate>
        <DataTemplate x:Key="SubEventDateCellTemplate">
            <DatePicker HorizontalAlignment="Left" Height="30" Width="120" VerticalAlignment="Top" DisplayDateStart="{Binding Path=AllowedDate, Mode=OneWay}" SelectedDate="{Binding Path=Date, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DataTemplate>
        <DataTemplate x:Key="SubEventTimeCellTemplate">
            <StackPanel Orientation="Horizontal">
                <ComboBox HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" ItemsSource="{Binding Path=AllowedStartHours}" ItemStringFormat="t" SelectedValue="{Binding Path=StartHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                <Label Content="to" Grid.Column="1" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" Margin="0" FontSize="13"/>
                <ComboBox HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" ItemsSource="{Binding Path=AllowedEndHours}" ItemStringFormat="t" SelectedValue="{Binding Path=EndHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="SubEventVenueCellTemplate">
            <ComboBox HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" Width="200" ItemsSource="{Binding Path=AllowedVenues}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectedValue="{Binding Path=VenueId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}" />
        </DataTemplate>
        <DataTemplate x:Key="SubEventActionCellTemplate">
            <Button Content="DELETE" Background="Red" HorizontalAlignment="Left" Width="Auto" d:LayoutOverrides="Height" FontWeight="Normal" FontSize="12" Padding="8,5" Tag="{Binding RelativeSource={RelativeSource Self}}" Click="subEventDelete_Click" Margin="5,0,0,0" />
        </DataTemplate>
        <!-- #End SubEvents Cell Templates -->
        
        <!-- #Start GuestList Cell Templates -->
    	<DataTemplate x:Key="GuestActionCellTemplate">
            <StackPanel Orientation="Horizontal">
                <Button Content="DELETE" Background="Red" HorizontalAlignment="Left" Width="Auto" d:LayoutOverrides="Height" FontWeight="Normal" FontSize="12" Padding="8,5" Tag="{Binding Path=MatricId}" Click="unregister_Click" />
            </StackPanel>
        </DataTemplate>
        <!-- #End GuestList Templates -->
		
        <!-- #Start Budget Cell Templates -->
        <DataTemplate x:Key="BudgetActionCellTemplate">
            <StackPanel Orientation="Horizontal">
                <Button Content="EDIT" HorizontalAlignment="Left" Width="Auto" d:LayoutOverrides="Height" FontWeight="Normal" FontSize="12" Padding="8,5" Tag="{Binding RelativeSource={RelativeSource Self}}" Click="budgetItemEdit_Click" />
                <Button Content="DELETE" Background="Red" HorizontalAlignment="Left" Width="Auto" d:LayoutOverrides="Height" FontWeight="Normal" FontSize="12" Padding="8,5" Tag="{Binding RelativeSource={RelativeSource Self}}" Click="budgetItemDelete_Click" Margin="5,0,0,0" />
            </StackPanel>
        </DataTemplate>
        <!-- #End Budget Cell Templates -->
    </Page.Resources>
	<StackPanel Height="768">
		<StackPanel.Background>
			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
				<GradientStop Color="White" Offset="0.2"/>
				<GradientStop Color="#FFEEEEEE"/>
			</LinearGradientBrush>
		</StackPanel.Background>
		<StackPanel Orientation="Horizontal" Margin="0,15,30,0" d:LayoutOverrides="Width" HorizontalAlignment="Right">
			<Label Content="Logged in as" Margin="0" FontSize="13.333" Foreground="#CC000000"/>
			<Label x:Name="loggedInUserLabel" FontWeight="Bold" Content="Melvin" Padding="0,5" FontSize="13.333"/>
			<Button x:Name="logoutButton" Content="LOGOUT" Padding="8,0" Margin="10,0,0,0" FontSize="12" Background="#FF333333" Click="logoutButton_Click"/>
		</StackPanel>
        <StackPanel Orientation="Horizontal" Margin="5,5">
            <Button Width="32" Height="32" Click="cancelButton_Click" Style="{DynamicResource backButton}" Margin="0,5,0,0" />
            <Label x:Name="eventActionTitle" FontSize="42" FontWeight="Light" HorizontalAlignment="Left" d:LayoutOverrides="HorizontalAlignment, GridBox" Content="{Binding Path=FormTitle, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="5,0" Padding="0" />
        </StackPanel>
        <Label x:Name="statusMessage" Margin="40,0" Padding="10,8" Content="{Binding Path=WarningMessages, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" BorderThickness="1" VerticalAlignment="Center" Style="{StaticResource StatusMessageWarningStyle}" Opacity="0" DataContextChanged="statusMessage_DataContextChanged" />
		<TextBox TextWrapping="Wrap" Text="{Binding Path=Event.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" Margin="40,10,40,0" FontSize="21.333" Width="500" HorizontalAlignment="Left" Padding="2" x:Name="eventNameBox" IsEnabled="{Binding Path=IsNewEvent}" />
		<TextBlock Margin="40,5" Foreground="#7F000000" Text="You will not be able to change your event name once it has been created!" FontSize="13.333" Padding="5,0"/>
		<TabControl DockPanel.Dock="Right" Margin="40,15,40,0">
			<TabItem Header="General" IsSelected="True">
				<Grid Margin="0,20" Height="300">
					<Grid.RowDefinitions>
						<RowDefinition Height="150"/>
						<RowDefinition Height="0.25*"/>
						<RowDefinition Height="0.25*"/>
						<RowDefinition Height="0.4*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.2*"/>
						<ColumnDefinition Width="0.8*"/>
					</Grid.ColumnDefinitions>
					<Label Content="Description" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" Grid.Row="0"/>
					<Label Content="Capacity" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" Grid.Row="1"/>
					<Label Content="Budget" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" Grid.Row="2"/>
					<Label Content="Visible to Public?" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" Grid.Row="3"/>
                    <TextBox x:Name="eventDescText" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Width="400" Height="120" FontSize="13.333" Text="{Binding Path=Event.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" ScrollViewer.VerticalScrollBarVisibility="Auto" />
					<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" >
                        <TextBox x:Name="eventCapacityBox" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="13.333" Text="{Binding Path=Event.Capacity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" IsEnabled="{Binding Path=IsNotCloseToEventDate}" Width="75" TextChanged="eventCapacityBox_TextChanged" />
						<Label Content="pax" Grid.Column="1" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" Margin="10,0" FontSize="14.667"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" >
						<Label Content="$" Grid.Column="1" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" FontSize="14.667"/>
                        <TextBox x:Name="eventBudgetBox" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="13.333" Text="{Binding Path=Budget, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" Width="75" LostFocus="eventBudgetBox_LostFocus" />
					</StackPanel>
                    <CheckBox x:Name="eventVisibleCheckbox" Content="Check this if you wish to have your event displayed on the front page." Grid.Row="3" Grid.Column="1" VerticalAlignment="Top" IsChecked="{Binding Path=Event.ViewAtLoginPage, UpdateSourceTrigger=PropertyChanged}"/>
				</Grid>
			</TabItem>
			<TabItem Header="Itinerary">
                <StackPanel Margin="0,20,0,15" d:LayoutOverrides="Width" IsEnabled="{Binding Path=IsNotCloseToEventDate, UpdateSourceTrigger=PropertyChanged}" MinHeight="300">
                    <DataGrid x:Name="subEventsListGrid" AutoGenerateColumns="False" HeadersVisibility="Column" IsReadOnly="True" GridLinesVisibility="None" d:LayoutOverrides="Width" ItemsSource="{Binding Path=SubEventCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Background="White">
                        <DataGrid.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </DataGrid.BorderBrush>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="PROGRAMME" Width="295" CellTemplate="{StaticResource SubEventNameCellTemplate}" />
                            <DataGridTemplateColumn Header="DATE" CellTemplate="{StaticResource SubEventDateCellTemplate}" />
                            <DataGridTemplateColumn Header="TIME" CellTemplate="{StaticResource SubEventTimeCellTemplate}" />
                            <DataGridTemplateColumn Header="VENUE" CellTemplate="{StaticResource SubEventVenueCellTemplate}" />
                            <DataGridTemplateColumn Header="ACTION" Width="*" CellTemplate="{StaticResource SubEventActionCellTemplate}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Orientation="Horizontal" Margin="0,20,0,0">
                        <Button x:Name="addSubEventsButton" Content="Add Programme" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" IsDefault="True" FontSize="14.667" FontWeight="Normal" Padding="20,5,20,7" Click="addSubEventsButton_Click" />
                        <Button x:Name="clearAllSubEventsButton" Click="clearAllSubEventsButton_Click" Content="Clear All" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14.667" FontWeight="Normal" Padding="20,5,20,7" IsCancel="True" Margin="10,0,0,0" />
                    </StackPanel>
                </StackPanel>
            </TabItem>
			<TabItem Header="Budget">
				<Grid Margin="0,20,0,15" MinHeight="300">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="25" />
						<RowDefinition Height="31" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.7*"/>
						<ColumnDefinition Width="0.3*"/>
					</Grid.ColumnDefinitions>
                    <DataGrid x:Name="budgetListGrid" AutoGenerateColumns="False" HeadersVisibility="Column" IsReadOnly="True" GridLinesVisibility="None" d:LayoutOverrides="Width" ItemsSource="{Binding Path=BudgetCollection, Mode=OneWay}" Background="White">
						<DataGrid.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="Black" Offset="0"/>
								<GradientStop Color="White" Offset="1"/>
							</LinearGradientBrush>
						</DataGrid.BorderBrush>
						<DataGrid.Columns>
							<DataGridTextColumn Header="#" Width="40" />
                            <DataGridTextColumn Header="ITEM NAME" Width="*" Binding="{Binding Path=Name}" />
                            <DataGridTextColumn Header="PRICE ($)" Width="120" Binding="{Binding Path=Cost}" />
                            <DataGridTemplateColumn Header="ACTION" Width="150" CellTemplate="{StaticResource BudgetActionCellTemplate}" />
						</DataGrid.Columns>
					</DataGrid>
                    <GroupBox x:Name="budgetItemForm" Grid.Column="1" Margin="15,0" Header="{Binding Path=BudgetItemFormHeader}" FontSize="14.667" Foreground="#CC000000">
						<StackPanel Margin="5,5">
							<Label Content="Item Name" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" />
                            <TextBox x:Name="budgetFormItemName" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="13.333" Width="200" Margin="5,0,0,5" Text="{Binding Path=CurBudgetItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
							<Label Content="Price" HorizontalAlignment="Left" Style="{DynamicResource formLabel}" />
                            <TextBox x:Name="budgetFormPrice" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Top" FontSize="18.667" Width="150" Margin="5,0,5,5" Text="{Binding Path=CurBudgetItem.Cost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
							<StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="0" Margin="5,20,5,0" >
                                <Button x:Name="budgetFormSave" Content="{Binding Path=BudgetItemSaveContent}" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" IsDefault="True" FontSize="14.667" FontWeight="Normal" Padding="20,5,20,7" Click="budgetFormSave_Click" />
                                <Button x:Name="budgetFormCancel" Click="budgetFormCancel_Click" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="14.667" FontWeight="Normal" Padding="20,5,20,7" IsCancel="True" Margin="10,0,0,0" />
							</StackPanel>
						</StackPanel>
					</GroupBox>
                    <metro:LinearProgressBar x:Name="budgetProgressBar" Height="10" VerticalAlignment="Center" Margin="0,15,0,0" Value="{Binding Path=BudgetPercentage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Maximum="100" Grid.Row="1" Grid.ColumnSpan="2" />
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="2" Grid.ColumnSpan="2">
						<Label Content="Budget ($):" HorizontalAlignment="Left" Margin="0,0,10,0" Foreground="#BF000000" FontSize="16" />
                        <Label x:Name="currentBudgetCounter" Content="{Binding Path=BudgetTotal, UpdateSourceTrigger=PropertyChanged}" FontSize="16" />
						<Label Content="/" FontSize="16" />
                        <Label x:Name="maxBudgetCounter" Content="{Binding ElementName=eventBudgetBox, Path=Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontSize="16" />
					</StackPanel>
				</Grid>
			</TabItem>
			<TabItem Header="Guest List" IsSelected="True" IsEnabled="{Binding Path=IsEditEvent}">
				<StackPanel Margin="0,20" MinHeight="300">
					<DataGrid x:Name="guestsListGrid" Margin="0" AutoGenerateColumns="False" HeadersVisibility="Column" IsReadOnly="True" GridLinesVisibility="None" ItemsSource="{Binding Path=Event.Guests}" Background="White" MinHeight="245">
						<DataGrid.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="Black" Offset="0"/>
								<GradientStop Color="White" Offset="1"/>
							</LinearGradientBrush>
						</DataGrid.BorderBrush>
						<DataGrid.Columns>
							<DataGridTextColumn Header="#" Width="40" />
                            <DataGridTextColumn Header="MATRIC NO." Width="150" Binding="{Binding Path=MatricId}" />
                            <DataGridTextColumn Header="NAME" Width="*" Binding="{Binding Path=Name}" />
							<DataGridTemplateColumn Header="ACTION" Width="250" CellTemplate="{StaticResource GuestActionCellTemplate}" />
						</DataGrid.Columns>
					</DataGrid>
                    <metro:LinearProgressBar x:Name="capacityProgressBar" Height="10" VerticalAlignment="Center" Margin="0,15,0,0" Value="{Binding Path=CapacityPercentage, Mode=OneWay}" Maximum="100" Minimum="0" />
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
						<Label Content="Capacity:" HorizontalAlignment="Left" Margin="0,0,10,0" Foreground="#BF000000" FontSize="16" />
                        <Label x:Name="currentCapacityCounter" Content="{Binding Path=CurrentCapacity, Mode=OneWay}" FontSize="16" />
						<Label Content="/" FontSize="16" />
                        <Label x:Name="maxCapacityCounter" Content="{Binding Path=Event.Capacity}" FontSize="16" />
					</StackPanel>
				</StackPanel>
			</TabItem>
		</TabControl>
		<Separator Height="20" Margin="30,0" />
		<StackPanel Orientation="Horizontal" Margin="40,0" >
            <Button x:Name="saveButton" Content="Save" HorizontalAlignment="Left" d:LayoutOverrides="Height" VerticalAlignment="Top" IsDefault="True" FontSize="18.667" FontWeight="Normal" Padding="20,5,20,7" Command="Save" />
			<Button x:Name="cancelButton" Content="Cancel" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="18.667" FontWeight="Normal" Padding="20,5,20,7" IsCancel="True" Margin="10,0,0,0" Click="cancelButton_Click" />
		</StackPanel>
	</StackPanel>
</Page>